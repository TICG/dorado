//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.225
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vancl.IC.VWS.BLL.FileServiceWCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="VwsDirectoryInfoList", Namespace="http://schemas.datacontract.org/2004/07/Vancl.IC.VWS.ClientService.Model", ItemName="VwsDirectoryInfo")]
    [System.SerializableAttribute()]
    public class VwsDirectoryInfoList : System.Collections.Generic.List<Vancl.IC.VWS.BLL.FileServiceWCF.VwsDirectoryInfo> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VwsDirectoryInfo", Namespace="http://schemas.datacontract.org/2004/07/Vancl.IC.VWS.ClientService.Model")]
    [System.SerializableAttribute()]
    public partial class VwsDirectoryInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFolderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationTime {
            get {
                return this.CreationTimeField;
            }
            set {
                if ((this.CreationTimeField.Equals(value) != true)) {
                    this.CreationTimeField = value;
                    this.RaisePropertyChanged("CreationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFolder {
            get {
                return this.IsFolderField;
            }
            set {
                if ((this.IsFolderField.Equals(value) != true)) {
                    this.IsFolderField = value;
                    this.RaisePropertyChanged("IsFolder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileServiceWCF.IFileTransService")]
    public interface IFileTransService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileTransService/Download", ReplyAction="http://tempuri.org/IFileTransService/DownloadResponse")]
        byte[] Download(out string md5, string filePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileTransService/Upload", ReplyAction="http://tempuri.org/IFileTransService/UploadResponse")]
        bool Upload(byte[] fileBytes, string md5);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileTransService/GetFileList", ReplyAction="http://tempuri.org/IFileTransService/GetFileListResponse")]
        Vancl.IC.VWS.BLL.FileServiceWCF.VwsDirectoryInfoList GetFileList(string folderPath);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileTransServiceChannel : Vancl.IC.VWS.BLL.FileServiceWCF.IFileTransService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileTransServiceClient : System.ServiceModel.ClientBase<Vancl.IC.VWS.BLL.FileServiceWCF.IFileTransService>, Vancl.IC.VWS.BLL.FileServiceWCF.IFileTransService {
        
        public FileTransServiceClient() {
        }
        
        public FileTransServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileTransServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileTransServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileTransServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public byte[] Download(out string md5, string filePath) {
            return base.Channel.Download(out md5, filePath);
        }
        
        public bool Upload(byte[] fileBytes, string md5) {
            return base.Channel.Upload(fileBytes, md5);
        }
        
        public Vancl.IC.VWS.BLL.FileServiceWCF.VwsDirectoryInfoList GetFileList(string folderPath) {
            return base.Channel.GetFileList(folderPath);
        }
    }
}
